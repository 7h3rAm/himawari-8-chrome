{"version":3,"file":null,"sources":["node_modules/d3-queue/src/queue.js","node_modules/d3-collection/src/map.js","node_modules/d3-dispatch/src/dispatch.js","node_modules/d3-request/src/request.js","node_modules/d3-request/src/type.js","node_modules/d3-dsv/src/dsv.js","src/main.js","node_modules/d3-queue/src/array.js","node_modules/d3-collection/src/set.js","node_modules/d3-request/src/json.js","node_modules/d3-dsv/src/csv.js","node_modules/d3-dsv/src/tsv.js"],"sourcesContent":["import {slice} from \"./array\";\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) try { start(q); } // let the current task complete\n  catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } // task errored synchronously\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) try { t.abort(); }\n      catch (e) { /* ignore */ }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) q._call(q._error, q._data);\n}\n\nexport default function queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {map} from \"d3-collection\";\nimport {dispatch} from \"d3-dispatch\";\n\nexport default function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n","import request from \"./request\";\n\nexport default function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n}\n","function objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import {queue} from 'd3-queue';\nimport {json} from 'd3-request';\n\n// base url for images\nvar HIMAWARI_BASE_URL = \"http://himawari8-dl.nict.go.jp/himawari8/img/\";\nvar DSCOVR_BASE_URL = \"http://epic.gsfc.nasa.gov/epic-archive/png/\";\n\n// links to online image explorers\nvar HIMAWARI_EXPLORER = \"http://himawari8.nict.go.jp/\";\nvar DSCOVR_EXPLORER = \"http://epic.gsfc.nasa.gov/\";\n\n// image types\nvar INFRARED = \"INFRARED_FULL\";\nvar VISIBLE_LIGHT = \"D531106\";\nvar DSCOVR_EPIC = \"EPIC\";\n\nvar WIDTH = 550;\nvar BLOCK_SIZES = [1, 4, 8, 16, 20];\n\nvar DSCOVR_WIDTH = 2048;\n\nvar IMAGE_QUALITY = 0.9;\nvar RELOAD_INTERVAL = 1 * 60 * 1000;  // 1 minutes\nvar RELOAD_TIME_INTERVAL = 10 * 1000;  // 10 seconds\n\n// local storage keys\nvar IMAGE_DATA_KEY = \"imageData\";\nvar CACHED_DATE_KEY = \"cachedDate\";\nvar CACHED_IMAGE_TYPE_KEY = \"cachedImageType\";\n\nvar isChromeExtension = window.chrome && chrome.app.getDetails();\n\n/**\n * Returns an array of objects containing URLs and metadata\n * for Himawari 8 image tiles based on a given date.\n * Options:\n * - date: Date object\n * - type: boolean (default: visible light)\n * - zoom: number (default: 1)\n * - blocks: alternative to zoom, how many images per row/column (default: 1)\n *      Has to be a valid block number (1, 4, 8, 16, 20)\n *\n * @param  {Object}       options\n */\nfunction himawariURLs(options) {\n  options = options || {};\n  var baseURL = HIMAWARI_BASE_URL + (options.type || VISIBLE_LIGHT);\n  var date = options.date;\n\n  // Define some image parameters\n  var blocks = options.blocks || (options.zoom ? BLOCK_SIZES[options.zoom - 1] : BLOCK_SIZES[0]);\n  var level = blocks + 'd';\n  var time = [date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds()].map(function (s) { return pad(s, 2) }).join(\"\");\n  var year = date.getUTCFullYear();\n  var month = pad(date.getUTCMonth() + 1, 2);\n  var day = pad(date.getUTCDate(), 2);\n\n  // compose URL\n  var tilesURL = [baseURL, level, WIDTH, year, month, day, time].join(\"/\");\n  var tiles = [];\n\n  for (var y = 0; y < blocks; y++) {\n    for (var x = 0; x < blocks; x++) {\n      var name = x + \"_\" + y + \".png\";\n      var url = tilesURL + \"_\" + name;\n\n      tiles.push({\n        name: name,\n        url: getCachedUrl(url),\n        x: x,\n        y: y\n      });\n    }\n  }\n\n  return {\n    tiles: tiles,\n    blocks: blocks,\n    date: date\n  };\n}\n\n/**\n * Parses a date string into a date object.\n * @param   {string | Date} date  Date as string or date object\n * @returns {Date}                Date object\n */\nfunction resolveDate(date) {\n  if (typeof date === \"string\") {\n    // Don't use Date.parse because it doesn't work with YYYY-MM-DD HH:MM:SSZ\n    var parts = date.match(/(\\d{4})-(\\d{2})-(\\d{2})\\s(\\d{2}):(\\d{2}):(\\d{2})Z/);\n    parts[2] -= 1; //months are zero-based\n    return new Date(Date.UTC.apply(this, parts.slice(1)));\n  } else {\n    return date;\n  }\n}\n\n/**\n * Create a cached URL thanks to our friends at Google.\n * See https://gist.github.com/carlo/5379498\n */\nfunction getCachedUrl(url) {\n  // 5 days caching, in seconds\n  var cache = 5 * 24 * 60 * 60;\n  return \"https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=\" + url + \"&container=focus&refresh=\" + cache\n}\n\n/**\n * Pads a number with trailing zeros and makes it a string.\n */\nfunction pad(num, size) {\n  var s = num + \"\";\n  while (s.length < size) {\n    s = \"0\" + s;\n  }\n  return s;\n}\n\n/**\n * Get the date of the latest himawari image by making an Ajax request.\n * @param   {boolean}  infrared  gets the latest infrared image\n * @returns {function}           callback function\n */\nfunction getLatestHimawariDate(infrared, cb) {\n  json(\"https://himawari-8.appspot.com/latest\" + (infrared ? \"?infrared=true\" : \"\"),\n    function (error, data) {\n      if (error) throw error;\n      var latest = data.date;\n      cb(resolveDate(latest + \"Z\"));\n    });\n}\n\nfunction getLatestDscovrImageUrlAndDate(cb) {\n  json(\"http://epic.gsfc.nasa.gov/api/images.php\",\n    function (error, data) {\n      if (error) throw error;\n      if (data.length === 0) return;\n      var latest = data[data.length - 1];\n      latest.date = resolveDate(latest.date + \"Z\")\n      cb(latest);\n    });\n}\n\n/**\n * Looks at the screen resolution and figures out a zoom level that returns images at a sufficient resolution.\n */\nfunction getOptimalNumberOfBlocks() {\n  var height = document.getElementById(\"output\").clientHeight * window.devicePixelRatio;\n  var minNumber = height / WIDTH;\n\n  for (var i = 0; i < BLOCK_SIZES.length; i++) {\n    var l = BLOCK_SIZES[i];\n    if (l > minNumber) {\n      return l;\n    }\n  }\n\n  console.log(height)\n\n  return BLOCK_SIZES[BLOCK_SIZES.length - 1];\n}\n\n// the date that is currently loaded\nvar loadedDate = null;\nvar loadedType = null;\n\nfunction timeSince(date) {\n  var seconds = Math.floor((new Date() - date) / 1000);\n\n  var interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n}\n\nfunction updateTimeAgo(date) {\n  document.getElementById(\"time\").innerHTML = \"<abbr title=\\\"\" + date + \"\\\">\" + timeSince(date) + \"</abbr> ago\";\n}\n\n/*\n * Set the right class on the body so that we can have different css.\n */\nfunction setBodyClass(imageType) {\n  switch (imageType) {\n    case DSCOVR_EPIC:\n      document.body.classList.add(\"dscovr\");\n      document.body.classList.remove(\"himawari\");\n      break;\n    default:\n      document.body.classList.remove(\"dscovr\");\n      document.body.classList.add(\"himawari\");\n      break;\n  }\n}\n\nfunction updateStateAndUI(date, imageType) {\n  updateTimeAgo(date);\n  loadedDate = date;\n  setBodyClass(imageType);\n  loadedType = imageType;\n}\n\n/**\n * Creates an image composed of tiles.\n * @param {Date object} date  The date for which to load the data.\n */\nfunction setHimawariImages(date, imageType) {\n  // no need to set images if we have up to date images and the image type has not changed\n  if (loadedDate && date.getTime() === loadedDate.getTime() && loadedType === imageType) {\n    return;\n  }\n\n  // if we haven't loaded images before, we want to show progress\n  var initialLoad = !localStorage.getItem(CACHED_DATE_KEY);\n\n  // immediately set the type and body class beacuse we are not loading in the background\n  if (initialLoad) {\n    updateStateAndUI(date, imageType)\n  }\n\n  // get the URLs for all tiles\n  var result = himawariURLs({\n    date: date,\n    blocks: getOptimalNumberOfBlocks(),\n    type: imageType\n  });\n\n  var pixels = result.blocks * WIDTH;\n\n  var canvas = initialLoad ? document.getElementById(\"output\") : document.createElement(\"canvas\");\n  var ctx = canvas.getContext(\"2d\");\n  ctx.canvas.width = pixels;\n  ctx.canvas.height = pixels;\n\n  var q = queue();\n\n  // add image to canvas and call callback when done\n  function addImage(tile, callback) {\n    var img = new Image();\n    img.setAttribute(\"crossOrigin\", \"anonymous\");\n    img.onload = function () {\n      ctx.drawImage(img, tile.x * WIDTH, tile.y * WIDTH, WIDTH, WIDTH);\n      callback();\n    }\n    img.src = tile.url;\n  }\n\n  result.tiles.forEach(function (tile) {\n    q.defer(addImage, tile);\n  });\n\n  // wait for all images to be drawn on canvas\n  q.awaitAll(function (error) {\n    if (error) throw error;\n\n    if (!initialLoad) {\n      // copy canvas into output in one step\n      var output = document.getElementById(\"output\");\n      var outCtx = output.getContext(\"2d\")\n      outCtx.canvas.width = pixels;\n      outCtx.canvas.height = pixels;\n      outCtx.drawImage(canvas, 0, 0);\n    }\n\n    updateStateAndUI(date, imageType);\n\n    // put date and image data in cache\n    var imageData = canvas.toDataURL(\"image/jpeg\", IMAGE_QUALITY);\n    localStorage.setItem(IMAGE_DATA_KEY, imageData);\n    localStorage.setItem(CACHED_DATE_KEY, date);\n    localStorage.setItem(CACHED_IMAGE_TYPE_KEY, imageType);\n  });\n}\n\nfunction setDscovrImage(latest) {\n  // no need to set images if we have up to date images and the image type has not changed\n  if (loadedDate && latest.date.getTime() === loadedDate.getTime() && loadedType === DSCOVR_EPIC) {\n    return;\n  }\n\n  // if we haven't loaded images before, we want to show progress\n  var initialLoad = !localStorage.getItem(CACHED_DATE_KEY);\n\n  // immediately set the type and body class beacuse we are not loading in the background\n  if (initialLoad) {\n    updateStateAndUI(latest.date, DSCOVR_EPIC)\n  }\n\n  var canvas = initialLoad ? document.getElementById(\"output\") : document.createElement(\"canvas\");\n  var ctx = canvas.getContext(\"2d\");\n  ctx.canvas.width = DSCOVR_WIDTH;\n  ctx.canvas.height = DSCOVR_WIDTH;\n\n  var img = new Image();\n  img.setAttribute(\"crossOrigin\", \"anonymous\");\n  img.onload = function () {\n    ctx.drawImage(img, 0, 0);\n\n    if (!initialLoad) {\n      // copy canvas into output in one step\n      var output = document.getElementById(\"output\");\n      var outCtx = output.getContext(\"2d\")\n      outCtx.canvas.width = DSCOVR_WIDTH;\n      outCtx.canvas.height = DSCOVR_WIDTH;\n      outCtx.drawImage(canvas, 0, 0);\n    }\n\n    updateStateAndUI(latest.date, DSCOVR_EPIC)\n\n    // put date and image data in cache\n    var imageData = canvas.toDataURL(\"image/jpeg\", IMAGE_QUALITY);\n    localStorage.setItem(IMAGE_DATA_KEY, imageData);\n    localStorage.setItem(CACHED_DATE_KEY, latest.date);\n    localStorage.setItem(CACHED_IMAGE_TYPE_KEY, DSCOVR_EPIC);\n  }\n  img.src = getCachedUrl(DSCOVR_BASE_URL + latest.image + '.png');\n}\n\n/* Asynchronously load latest image(s) date and images for that date */\nfunction setLatestImage() {\n  if (!navigator.onLine) {\n    // browser is offline, no need to do this\n    return;\n  }\n\n  function himawariCallback(imageType) {\n    getLatestHimawariDate(imageType, function (latest) {\n      setHimawariImages(latest, imageType);\n    });\n  }\n\n  function dscovrCallback() {\n    getLatestDscovrImageUrlAndDate(function (latest) {\n      setDscovrImage(latest);\n    });\n  }\n\n  if (isChromeExtension) {\n    chrome.storage.sync.get({\n      imageType: VISIBLE_LIGHT\n    }, function (items) {\n      switch (items.imageType) {\n        case DSCOVR_EPIC:\n          dscovrCallback();\n          break;\n        case INFRARED:\n        case VISIBLE_LIGHT:\n        default:\n          himawariCallback(items.imageType);\n          break;\n      }\n    });\n  } else {\n    // if we are not in the extension, let's always load visible light\n    himawariCallback(VISIBLE_LIGHT);\n  }\n}\n\n/** Load image from local storage */\nfunction setCachedImage() {\n  var canvas = document.getElementById(\"output\");\n  var ctx = canvas.getContext(\"2d\");\n  var date = new Date(localStorage.getItem(CACHED_DATE_KEY));\n\n  var img = new Image();\n  img.onload = function () {\n    ctx.canvas.width = img.width;\n    ctx.canvas.height = img.height;\n    ctx.drawImage(img, 0, 0);\n\n    updateStateAndUI(date, localStorage.getItem(CACHED_IMAGE_TYPE_KEY));\n  }\n  img.src = localStorage.getItem(IMAGE_DATA_KEY);\n}\n\n// check if there are new images form time to time\nwindow.setInterval(setLatestImage, RELOAD_INTERVAL);\n\n// also load a new image when we come back online\nwindow.addEventListener(\"online\", setLatestImage);\n\n// initial loading\nif (localStorage.getItem(CACHED_DATE_KEY)) {\n  setCachedImage();\n}\nsetLatestImage();\n\n// update the time ago\nwindow.setInterval(function () {\n  if (loadedDate) {\n    updateTimeAgo(loadedDate);\n  }\n}, RELOAD_TIME_INTERVAL);\n\n// hide some things if we are not a chrome extension\nif (isChromeExtension) {\n  document.body.classList.add(\"extension\");\n  document.getElementById(\"go-to-options\").addEventListener(\"click\", function () {\n    chrome.runtime.openOptionsPage();\n  });\n}\n\ndocument.getElementById(\"explore\").addEventListener(\"click\", function () {\n  window.open(loadedType === DSCOVR_EPIC ? DSCOVR_EXPLORER : HIMAWARI_EXPLORER, \"_self\");\n});\n","export var slice = [].slice;\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","import type from \"./type\";\n\nexport default type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n"],"names":["Queue","size","Error","this","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","start","e","abort","i","t","j","length","c","end","apply","noabort","r","maybeNotify","undefined","NaN","queue","concurrency","arguments","Infinity","Map","map","object","f","each","value","key","set","Array","isArray","o","n","dispatch","_","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","slice","hasOwnProperty","type","get","callback","noop","concat","push","url","respond","result","status","xhr","hasResponse","response","call","request","event","mimeType","responseType","headers","XMLHttpRequest","user","password","timeout","XDomainRequest","test","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","toLowerCase","remove","data","send","post","method","open","has","setRequestHeader","overrideMimeType","fixCallback","on","error","responseText","defaultMimeType","objectConverter","columns","Function","JSON","stringify","join","customConverter","row","inferColumns","rows","columnSet","Object","create","forEach","column","delimiter","parse","text","convert","parseRows","token","I","N","EOF","eol","EOL","charCodeAt","replace","k","delimiterCode","a","format","formatValue","formatRows","formatRow","reFormat","RegExp","himawariURLs","options","baseURL","HIMAWARI_BASE_URL","VISIBLE_LIGHT","date","blocks","zoom","BLOCK_SIZES","level","time","getUTCHours","getUTCMinutes","getUTCSeconds","s","pad","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","tilesURL","WIDTH","tiles","y","x","getCachedUrl","resolveDate","parts","match","Date","UTC","cache","num","getLatestHimawariDate","infrared","cb","json","latest","getLatestDscovrImageUrlAndDate","getOptimalNumberOfBlocks","height","document","getElementById","clientHeight","window","devicePixelRatio","minNumber","l","console","log","timeSince","seconds","Math","floor","interval","updateTimeAgo","innerHTML","setBodyClass","imageType","DSCOVR_EPIC","body","classList","add","updateStateAndUI","loadedDate","loadedType","setHimawariImages","addImage","tile","img","Image","setAttribute","ctx","drawImage","src","getTime","initialLoad","localStorage","getItem","CACHED_DATE_KEY","pixels","canvas","createElement","getContext","width","defer","awaitAll","output","outCtx","imageData","toDataURL","IMAGE_QUALITY","setItem","IMAGE_DATA_KEY","CACHED_IMAGE_TYPE_KEY","setDscovrImage","DSCOVR_WIDTH","DSCOVR_BASE_URL","image","setLatestImage","himawariCallback","dscovrCallback","navigator","onLine","isChromeExtension","chrome","storage","sync","items","INFRARED","setCachedImage","prototype","constructor","await","results","prefix","property","clear","keys","values","entries","empty","typename","T","copy","that","args","dsv","HIMAWARI_EXPLORER","DSCOVR_EXPLORER","RELOAD_INTERVAL","RELOAD_TIME_INTERVAL","app","getDetails","setInterval","addEventListener","runtime","openOptionsPage"],"mappings":"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"}